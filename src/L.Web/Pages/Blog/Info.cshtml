@page
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Alert
@using Volo.Abp.AspNetCore.Mvc.UI.Layout
@using L.Permissions
@model L.Web.Pages.Blog.InfoModel
@inject IPageLayout PageLayout
@{
    ViewBag.Title = "博客信息";
    PageLayout.Content.MenuItemName = LPermissions.Blogs.Default;
    var info = Model.info;
}
@section styles{
    <link href="~/js/outline.js/outline.min.css" rel="stylesheet"/>
    <link href="~/js/prism/prism.css" rel="stylesheet" />
    <style>
        .blog-cnt img {
            max-width: 100%;
        }
        .blog-info {
            background-color: #F9E9E2;
            font-size: 16px;
            /* padding: 1rem 1.6rem; */
            padding: 20px 23px;
            color: #DC4C3E;
            padding-bottom: 5px;
            border-radius: 4px;
        }
    </style>
}
@section content_toolbar {
    @if (info.IsReprint)
    {
        <a class="btn btn-primary ms-2" href="@(info.Url)" target="_blank">
            原文地址
        </a>
    }
    <a class="btn btn-info ms-2" id="js-edit-tag" href="javascript:;">
        编辑标签
    </a>
    <a class="btn btn-info ms-2" id="js-edit-info" href="javascript:;">
        编辑概要
    </a>
    <a class="btn btn-danger ms-2" id="js-delete" href="javascript:;">
        删除并返回
    </a>
    <a class="btn btn-primary ms-2" href="/BlogMgr/Edit?id=@(info.Id)" target="_blank">
        去编辑
    </a>
    <a class="btn btn-facebook ms-2" href="javascript:;" onclick="window.history.back();">
        <i class="fas fa-arrow-left"></i>
        返回
    </a>
}

<div class="row" data-sticky-container>
    <div class="col-9" id="article">
        <div class="card">
            <div class="card-body ">
                <h1 class="">
                    <div class="text-center fs-1 text-center my-10">@(info.Title)</div>
                </h1>
                <div class="text-center mt-2 mb-4 fs-4">
                    <span>类型：@(info.IsReprint ? "转载" : "原创")</span>
                    <span class="mx-1">|</span>
                    <span>作者：@(info.Author)</span>
                    @if (info.IsReprint)
                    {
                        <span class="mx-1">|</span>
                        <span>原文地址：<a href="@(info.Url)" target="_blank">前往</a></span>
                    }
                    <span class="mx-1">|</span>
                    <span>时间：@(info.Time.ToString("yyyy年M月d日"))</span>
                </div>
                <div class="text-center mt-2 mb-4 fs-4">
                    @foreach (var tag in Model.InfoTags)
                    {
                        <span class="mx-1"><i class="fas fa-tags text-primary me-1"></i>@(tag.Title)</span>
                    }
                </div>
                @if (!info.Info.IsNullOrWhiteSpace())
                {
                    <div class="blog-info">
                        @Html.Raw(info.Info)
                    </div>
                }
                <div class="fs-4 px-20 blog-cnt">
                    @Html.Raw(info.Cnt)
                </div>
            </div>
        </div>
        
    </div>
    <div class="col-3">
        <div class="card sticky" data-sticky="true" data-margin-top="110px" data-sticky-for="1023" data-sticky-class="sticky">
            <div class="card-body" id="aside">
            </div>
        </div>
    </div>
</div>
@* <div class="card"> *@
@*     <div class="card-body row"> *@
@*         <div class="col-9"> *@
@*              *@
@*         </div> *@
@*         <div class="col-3"> *@
@*             <aside id="aside"> *@
@*                  *@
@*             </aside> *@
@*         </div> *@
@*          *@
@*     </div> *@
@* </div> *@


@section scripts{
    <script src="~/js/outline.js/outline.min.js"></script>
    <script src="~/js/prism/prism.js"></script>
    <script src="~/lib/sticky-js/sticky.min.js"></script>
    <script src="~/js/ckeditor/ckeditor.js"></script>
    <script>
        var id = @(Model.info.Id);
        var _createModal = new abp.ModalManager({
            viewUrl: abp.appPath + 'Blog/EditTag',
            modalClass: "createUser"
        });
        _createModal.onResult(function() {
            window.location.reload();
        });

        var _editModal = new abp.ModalManager({
            viewUrl: abp.appPath + 'Blog/EditInfo',
            modalClass: "createUser"
        });
        _editModal.onOpen(function() {
            ClassicEditor
                .create(document.querySelector('#Info'),
                    {
                        simpleUpload: {
                            // 图像上传到的URL.
                            uploadUrl: '/Files/ckeditor',
                            // 启用XMLHttpRequest.withCredentials属性。
                            withCredentials: true,
                            // 标头与XMLHttpRequest一起沿着发送到上载服务器。
                            headers: {
                                RequestVerificationToken: abp.security.antiForgery.getToken()
                            }
                        }
                    })
                .then(editor => {
                    editor.model.document.on('change:data',
                        ( evt, data ) => {
                            $('#Info').val(editor.getData());
                        });
                })
                .catch(error => {
                    console.error(error);
                });
        });
        $(function() {
            $('#js-edit-tag').click(function() {
                _createModal.open({ id: id });
            });
            $('body').on('click',
                '#js-save-tag',
                function() {
                    var idList = [];
                    _createModal.getModal().find('input[name="Tag"]:checked').each(function(k, v) {
                        idList.push($(v).val());
                    });
                    abp.ui.setBusy();
                    l.wInformations.information.updateTag(id, { Tag: JSON.stringify(idList), info: "" }).done(function () {
                        abp.notify.success("操作成功！");
                        window.location.reload();
                    }).always(function() {
                        abp.ui.clearBusy();
                    });

                });
            $('body').on('click',
                '#js-save-info',
                function() {
                    var model = _editModal.getForm().serializeFormToObject();
                    model.Tag = "";
                    abp.ui.setBusy();
                    l.wInformations.information.updateInfo(id, model).done(function () {
                        abp.notify.success("操作成功！");
                        window.location.reload();
                    }).always(function() {
                        abp.ui.clearBusy();
                    });

                });
            $('#js-edit-info').click(function() {
                _editModal.open({ id: @(Model.info.Id) });

            });

            $("#js-delete").click(function () {
                var id = $(this).data("id");
                abp.message.confirm("确定删除该条信息吗？",
                    function (isConfirmed) {
                        if (isConfirmed) {
                            l.wInformations.information.delete(@(Model.info.Id)).then(function () {
                                abp.notify.info("操作成功！");
                                window.history.back();
                            });
                        }
                    });
            })

//            

            var sticky = new Sticky('.sticky');

//            var defaults = Outline.DEFAULTS
//            var outline
//
//            defaults.position = 'sticky'
//            defaults.stickyHeight = 86
//            defaults.parentElement = '#aside'
//            defaults.scrollElement = 'body'
//            outline = new Outline(defaults)
            var outline = new Outline({
                // 文章显示区域的 DOM 元素或者选择器字符串
                articleElement: '#article',
                // 要收集的标题选择器
                selector: 'h1,h2,h3,h4,h5,h6',
                // 负责文章区域滚动的元素
                // String 类型 - 选择器字符串，默认值：html,body（window窗口）
                // HTMLElement 类型 - DOM 元素
                scrollElement: 'html,body',
                // 文章导读菜单的位置
                // relative - （默认值）创建独立的侧滑菜单
                // sticky - 导航菜单将以 sticky 模式布局（需要确保菜单插入位置支持 sticky 模式布局）
                // fixed - 导航菜单将以 fixed 模式布局，会自动监听滚动位置，模拟 sticky 布局
                // sticky 和 fixed 布局时，需要设置 parentElement
                // 2.0.0 暂时不支持在文章开始位置插入 chapters 导航菜单
                position: 'sticky',
                // 设置 position: relative 时，placment 定义侧滑菜单和 toolbar 导航位置：
                // rtl - 菜单位置在窗口右侧，滑动动画为：right to left
                // ltr - 菜单位置在窗口左侧，滑动动画为：left to right
                // ttb - 菜单位置在窗口上方，滑动动画为：top to bottom
                // btt - 菜单位置在窗口下方，滑动动画为：bottom to top
                placement: 'rtl',
                // 导航菜单将要插入的位置（DOM 元素）
                // String 类型 - 选择器字符串
                // HTMLElement 类型 - 插入的 DOM 元素
                // 仅在 position 设置为 sticky 和 fixed 布局时有效
                parentElement: '#aside',
                // 是否显示段落章节编号
                showCode: false,
                // 标题图标链接的 URL 地址
                // （默认）没有设置定制，点击链接页面滚动到标题位置
                // 设置了链接地址，则不会滚动定位
                anchorURL: '',
                // DIYer的福利
                // 独立侧滑菜单时，customClass 会追加到 drawer 侧滑窗口组件
                // 在文章中显示导航菜单时，customClass 会追加到 chapters 导航菜单
                //customClass
            });

// 可以在创建导航后，重置配置信息，重新生成新的导航
//            Outline.reload({
//                // 调整位直接在文章内生成导航
//                position: 'sticky',
//                articleElement: '#aside'
//            })
        })
    </script>
}